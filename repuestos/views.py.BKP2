import os
import urllib.request

from django.shortcuts import render, get_object_or_404
#from .models import Image
from .models import Articulo

from io import BytesIO
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4, landscape
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.platypus import Paragraph, Table, TableStyle, Image
from reportlab.lib.enums import TA_LEFT, TA_CENTER
from reportlab.lib import colors
from reportlab.lib.units import inch, cm
from django.http import HttpResponse, HttpResponseNotFound
from reportlab.lib.colors import black, white, pink, lightblue, blue
from reportlab.platypus import SimpleDocTemplate


"""
filename = './python-logo.png'

def get_python_image():
    # Get a python logo image for this example
    #if not os.path.exists(filename):
    response = urllib.request.urlopen('http://www.pngall.com/wp-content/uploads/2016/05/Python-Logo-PNG-Image.png')
    #f = open(filename, 'w')
    f.write(response.read())
    f.close()
"""



def part_list(request):
    articulos = Articulo.objects.all()
    return render(request, 'repuestos/part_list.html', {'articulos': articulos})


def part_detail(request, pk):
    compo = get_object_or_404(Articulo , pk=pk)
    return render(request, 'repuestos/part_detail.html', {'compo': compo})





def part_pdf(request, pdf_art_id):
    #Create the HttpResponse object with the appropriate PDF headers.
    response = HttpResponse(content_type='application/pdf')
    #response['Content-Disposition'] = 'attachment; filename="somefilename.pdf"'
    response['Content-Disposition'] = 'inline; filename="testPdf.pdf"'   # para abrirlo con el navegador

    # Create the PDF object, using the response object as its "file."
    p = canvas.Canvas(response)

    #OBJ = Articulo.objects.get(numeroParte='ARA370071')
    OBJ = Articulo.objects.get(pk=pdf_art_id)

    # Draw things on the PDF. Here's where the PDF generation happens.
    # See the ReportLab documentation for the full list of functionality.


    p.setFont("Helvetica", 10)
    p.setStrokeColor(black)
    p.setFillColor(black)
    p.drawString(15.5 * cm, 27.3 * cm, "Especificaciones Técnicas")

    #barrita azul header
    p.setFillColor(blue)
    p.setStrokeColor(blue)
    p.rect(1.5 * cm, 26.9 * cm,  18.6 * cm, 0.1 * cm, stroke=False, fill=True) # x,y, with,heigt


    #barra AZUL
    p.rect(1.5 * cm, 26.0 * cm,  18.6 * cm, 0.8 * cm, stroke=False, fill=True) # x,y, with,heigt

    # SAP- ARAxxxxxx
    p.setFont("Helvetica-Bold", 18)
    p.setStrokeColor(white)
    p.setFillColor(white)
    p.drawString(1.75 * cm, 26.20 * cm, OBJ.numeroParte)

    # SAP- Titulo
    p.setStrokeColor(white)
    p.setFillColor(white)
    p.setFont("Helvetica-Bold", 14)
    p.drawString(7.0 * cm, 26.25 * cm, OBJ.titulo)


    #INFORMACIÓN PARA COMPRAS
    p.setFillColor(lightblue)
    p.setStrokeColor(lightblue)
    p.rect(1.5 * cm, 25.1 * cm,  18.6 * cm, 0.5 * cm, stroke=False, fill=True) # x,y, with,heigt
    p.setFont("Helvetica", 10)
    p.setStrokeColor(black)
    p.setFillColor(black)
    p.drawString(1.8 * cm, 25.20 * cm, "INFORMACIÓN PARA COMPRAS")


    # tabla
    p.setStrokeColor(black)
    p.rect(1.5 * cm, 22.0 * cm,  18.6 * cm, 2.4 * cm, stroke=True, fill=False)

    p.rect(1.50 * cm, 22.00 * cm,  18.6 * cm, 0.60 * cm, stroke=True, fill=False)
    p.rect(1.50 * cm, 22.60 * cm,  18.6 * cm, 0.60 * cm, stroke=True, fill=False)
    p.rect(1.50 * cm, 23.20 * cm,  18.6 * cm, 0.60 * cm, stroke=True, fill=False)

    p.rect( 1.50 * cm, 22.00 * cm,  3.20 * cm, 2.4 * cm, stroke=True, fill=False) # tabla cuadro izq

    p.rect(16.00 * cm, 22.60 * cm,  3.20 * cm, 1.8 * cm, stroke=True, fill=False) # tabla cuadro der_2

    #tabla Text
    p.setFont("Helvetica-Bold", 10)
    p.drawString(1.8 * cm, 24.00 * cm, "Marca")
    p.drawString(1.8 * cm, 23.40 * cm, "Mod./ # Parte")
    p.drawString(1.8 * cm, 22.80 * cm, "Linea")
    p.drawString(1.8 * cm, 22.2 * cm, "Comentarios")

    p.drawString(16.5 * cm, 24.00 * cm, "Reemplazable")
    p.drawString(16.5 * cm, 23.40 * cm, "Fab.a Pedido")
    p.drawString(16.5 * cm, 22.80 * cm, "Plano")
    p.drawString(19.4 * cm, 24.00 * cm, "SI")
    p.drawString(19.4 * cm, 23.40 * cm, "SI")
    p.drawString(19.4 * cm, 22.80 * cm, "SI")



    #DESCRIPCIÓN
    p.setFillColor(lightblue)
    p.setStrokeColor(lightblue)
    p.rect(8.6 * cm, 20.8 * cm,  11.5 * cm, 0.5 * cm, stroke=False, fill=True) # x,y, with,heigt
    p.setFont("Helvetica", 10)
    p.setStrokeColor(black)
    p.setFillColor(black)
    p.drawString(8.8 * cm, 20.9 * cm, "DESCRIPCIÓN")

    # imagen
    p.setStrokeColor(black)
    p.rect(1.8 * cm, 15.2 * cm,  6.0 * cm, 6.0 * cm, stroke=True, fill=False) # tabla imagen

    #CONTROLES / ENSAYOS
    p.setFillColor(lightblue)
    p.setStrokeColor(lightblue)
    p.rect(1.5 * cm, 14.5 * cm,  18.6 * cm, 0.5 * cm, stroke=False, fill=True) # x,y, with,heigt
    p.setFont("Helvetica", 10)
    p.setStrokeColor(black)
    p.setFillColor(black)
    p.drawString(1.8 * cm, 14.65 * cm, "CONTROLES / ENSAYOS")

    #REFERENCIAS
    p.setFillColor(lightblue)
    p.setStrokeColor(lightblue)
    p.rect(1.5 * cm, 13.5 * cm,  18.6 * cm, 0.5 * cm, stroke=False, fill=True) # x,y, with,heigt
    p.setFont("Helvetica", 10)
    p.setStrokeColor(black)
    p.setFillColor(black)
    p.drawString(1.8 * cm, 13.65 * cm, "REFERENCIAS")

    #CONTROL DE CAMBIOS
    p.setFillColor(lightblue)
    p.setStrokeColor(lightblue)
    p.rect(1.5 * cm, 12.5 * cm,  18.6 * cm, 0.5 * cm, stroke=False, fill=True) # x,y, with,heigt
    p.setFont("Helvetica", 10)
    p.setStrokeColor(black)
    p.setFillColor(black)
    p.drawString(1.8 * cm, 12.65 * cm, "CONTROL DE CAMBIOS")

    # tabla Rev.
    p.setStrokeColor(black)
    p.rect(1.5 * cm, 4.0 * cm,  18.6 * cm, 1.8 * cm, stroke=True, fill=False)

    p.rect(1.50 * cm, 4.00 * cm,  18.6 * cm, 0.60 * cm, stroke=True, fill=False)
    p.rect(1.50 * cm, 4.60 * cm,  18.6 * cm, 0.60 * cm, stroke=True, fill=False)
    p.rect(1.50 * cm, 4.00 * cm,  1.20 * cm, 1.8 * cm, stroke=True, fill=False) # tabla cuadro izq
    p.rect(18.5 * cm, 4.00 * cm,  1.60 * cm, 1.8 * cm, stroke=True, fill=False) # tabla cuadro der_2
    p.drawString(1.8 * cm, 5.35 * cm, "Rev.")
    p.drawString(3.0 * cm, 5.35 * cm, "Modificación")
    p.drawString(18.7 * cm, 5.35 * cm, "Fecha")

    #dato rev.
    p.drawString(1.8 * cm, 4.8 * cm, "00")
    p.drawString(3.0 * cm, 4.8 * cm, "Emisión")

    # tabla Aprobacion.
    p.setStrokeColor(black)
    p.rect(1.5 * cm, 2.0 * cm,  18.6 * cm, 1.8 * cm, stroke=True, fill=False)
    p.rect( 1.50 * cm, 2.00 * cm,  6.20 * cm, 1.8 * cm, stroke=True, fill=False) # tabla cuadro izq
    p.rect(13.90 * cm, 2.00 * cm,  6.20 * cm, 1.8 * cm, stroke=True, fill=False) # tabla cuadro der_2
    p.drawString(1.8 * cm, 3.4 * cm, "Preparó:")
    p.drawString(8.0 * cm, 3.4 * cm, "Revisó:")
    p.drawString(14.2 * cm, 3.4 * cm, "Aprobó:")


    #barrita azul footer
    p.setFillColor(blue)
    p.setStrokeColor(blue)
    p.rect(1.5 * cm, 1.5 * cm,  18.6 * cm, 0.1 * cm, stroke=False, fill=True) # x,y, with,heigt
    p.drawString(1.8 * cm, 1.0 * cm, "AR-PE-06-050 - Rev.00 - 15/06/2018")

    """
    p.setFillColor(blue)
    p.setStrokeColor(blue)
    p.rect(1.5*cm, 27.5*cm,  19,5*cm, 0.4*cm, stroke=False, fill=True) # x,y, with,heigt

    p.rect(1.5*cm, 27.0*cm,  19.5*cm, 1.0*cm, stroke=False, fill=True) # x,y, with,heigt
    #colorsRGB()

    p.setFont("Helvetica", 15)
    p.setStrokeColor(lightblue)
    p.setFillColor(lightblue)
    p.drawString(2.0*cm, 27.3*cm, OBJ.numeroParte)

    p.setFillColor(blue)
    p.setStrokeColor(blue)
    p.rect(1.5*cm, 26.5*cm, 19.5*cm, 0.4*cm,  stroke=False, fill=True) # x,y, with,heigt

    p.setStrokeColor(black)
    p.setFillColor(black)
    p.drawString(50, 650, OBJ.titulo)
    p.drawString(50, 600, OBJ.observation)




    p.setStrokeColor(lightblue)
    p.setFillColor(lightblue)
    p.rect(10, 10, 50, 100, stroke=True, fill=True)

    p.setStrokeColor(black)
    p.setFillColor(black)

    p.drawString(10, 10, "10,10px")
    p.drawString(50, 100, "50,100px")

    p.setFillColor(blue)
    p.setStrokeColor(black)
    p.rect(3 * cm, 3 * cm, 5 * cm, 5 * cm, stroke=True, fill=True) # x,y, with,heigt

    p.setFillColor(black)
    p.setFont("Helvetica", 6)
    p.drawString(3 * cm, 3 * cm, "3,3cm")
    p.drawString((3 + 5) * cm, (3 + 5) * cm, "8,8cm (5cm de lado)")

    """


    # Close the PDF object cleanly, and we're done.
    p.showPage()
    p.save()
    return response




"""
def part_pdf(request):
    response = HttpResponse(content_type='application/pdf')
    response['Content-Disposition'] = 'inline; filename="testPdf.pdf"'   # para abrirlo con el navegador

    buff = BytesIO()

    get_python_image()


    doc = SimpleDocTemplate(buff,
                            pagesize=A4,
                            rightMargin=40,
                            leftMargin=40,
                            topMargin=60,
                            bottomMargin=18,
                            )
    parts = []
    parts.append(Image(filename))
    doc.build(parts)
    response.write(buff.getvalue())
    buff.close()
    return response
"""


"""
def part_pdf(request):
    response = HttpResponse(content_type='application/pdf')
    response['Content-Disposition'] = 'inline; filename="testPdf.pdf"'   # para abrirlo con el navegador
    doc = SimpleDocTemplate(response,topMargin=2)

    doc.pagesize = landscape(A4)
    elements = []
    I = Image('https://images.vexels.com/media/users/3/147375/isolated/preview/67ae8a155355e39d23b955cfc7218d62-2018-3d-logo-verde-by-vexels.png')
    I.drawHeight =  0.7*inch
    I.drawWidth = 0.7*inch
    elements.append(I)
    doc.build(elements)
    return response
"""



"""
def part_pdf(request):
    # Create the HttpResponse object with the appropriate PDF headers.
    response = HttpResponse(content_type='application/pdf')
    #response['Content-Disposition'] = 'attachment; filename="somefilename.pdf"'
    response['Content-Disposition'] = 'inline; filename="testPdf.pdf"'   # para abrirlo con el navegador

    c = canvas.Canvas(response)


    c.setFont("Helvetica", 12)
    c.setStrokeColor(lightblue)
    c.setFillColor(lightblue)
    c.drawString(10 * cm, 5 * cm , "OBJ.numeroParte")


    a = Image.open("path/to/temp.jpg")
    a.drawHeight = 2*inch
    a.drawWidth = 2*inch
    data=[['1',a],['3','4']]
  #  c = canvas.Canvas("Reportlabtest.pdf", pagesize=landscape(A4))
    table = Table(data, colWidths=200, rowHeights=50)
    table.setStyle(TableStyle([
                               ('INNERGRID', (0,0), (-1,-1), 0.25, colors.black),
                               ('BOX', (0,0), (-1,-1), 0.25, colors.black),
                               ('BACKGROUND',(0,0),(-1,2),colors.lightgrey)
                               ]))
    table.wrapOn(c, 200, 400)
    table.drawOn(c,20,50)
    c.save()
    return response

"""
